# -*- coding: utf-8 -*-
"""Pinecone_demo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ep6-10Sy5tPw3kaSuy3a8gn3xunmHk98


!pip install langchain pinecone-client pypdf

!pip install openai
!pip install tiktoken


!pip install -U langchain-community

!gdown id -o location # function to download from google
"""

from langchain.document_loaders import PyPDFDirectoryLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.vectorstores import Pinecone
from langchain.llms import OpenAI
from langchain.chains import RetrievalQA
from langchain.prompts import PromptTemplate
import os




"""Extract Tet from the PDF's"""

loader =  PyPDFDirectoryLoader("pdfs/")
docs = loader.load()

docs

"""## Split extracted Data into chunks"""

text_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=20)
chunks = text_splitter.split_documents(docs)
chunks

len(chunks)

chunks[2]

"""## Downloading embedding"""

os.environ["OPENAI_API_KEY"] = "ssk"

embeddings =  OpenAIEmbeddings()

results = embeddings.embed_query(chunks[0].page_content)

"""## Initialize Pincone"""

PINECONE_API_KEY = OS.environ.get("PINECONE_API_KEY", "sk")
PINECONE_ENV = "asia-southeast1-gcp"

import pinecone

# initialize pinecone

pinecone.init(
    api_key = PINECONE_API_KEY,
    environment = PINECONE_ENV
)
index_name = "tst" # name of the pincone index here

"""## Create Embeddings for ech of the chunks"""

docsearch = Pinecone.from_texts([t.page_content for t in chunks], embeddings, index_name=index_name)

"""## Similarity Search"""

query = "write anything you want"

doc = docsearch.similarity_search(query, k=3) #  k number of output

# the doc query wont be readable so we have to use llm

"""## Creating LLM model Wrapper"""

llm = OpenAI()

qa =  RetrievalQA.from_chain_type(llm=llm, chain_type="stuff", retriever=docsearch.as_retriever())

"""## QA"""

qa.run(query)

"""# Trying real application with user input"""

import sys

while True:
  user_input = input(f"write your prompt:")
  if user_input == "exit":
    sys.exit()
  if user_input == "":
    continue
  result = qa({"query": user_input})
  print(f"Answer: {result['result']}")